syntax = "proto3";

option go_package = "proto/tour";

import "google/protobuf/timestamp.proto";

enum Status {
  DRAFT = 0;
  PUBLISHED = 1;
  ARCHIVED = 2;
}

enum Difficult {
    EASY = 0;
    MEDIUM = 1;
    HARD = 2;
  }

enum TravelMethod {
  CAR = 0;
  BICYCLE = 1;
  WALKING = 2;
}

message TourDto {
  int64 id = 1;
  int64 author_id = 2;
  string name = 3;
  string description = 4;
  Difficult difficult = 5; 
  Status status = 6;
  float price = 7;
  string tags = 8;
  float distance = 9;
  repeated CheckpointDto checkpoints = 10;
  google.protobuf.Timestamp publish_time = 11;
  google.protobuf.Timestamp archive_time = 12;
  repeated EquipmentDto equipments = 13;
  repeated TravelTimeAndMethodDto travel_time_and_method = 14;
}

message CheckpointDto {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string picture_url = 4;
  double latitude = 5;
  double longitude = 6;
  int64 tour_id = 7;
}

message EquipmentDto {
  int64 id = 1;
  string name = 2;
  string description = 3;
}

message TravelTimeAndMethodDto {
  int64 travel_time = 1;
  TravelMethod travel_method = 2;
}

service TourService {
  rpc FindTour(FindTourRequest) returns (TourDto) {}
  rpc FindTourByAuthorId(FindByAuthorIdRequest) returns (FindByAuthorIdResponse) {}
  rpc CreateTour(TourDto) returns (TourDto) {}
  rpc UpdateTour(TourDto) returns (TourDto) {}
  rpc PublishTour(PublishTourRequest) returns (PublishTourResponse) {}
  rpc ArchiveTour(ArchiveTourRequest) returns (ArchiveTourResponse) {}
}

message FindTourRequest {
  int64 id = 1;
}

message FindByAuthorIdRequest {
  int64 author_id = 1;
}

message FindByAuthorIdResponse {
  repeated TourDto tours = 1;
}


message PublishTourRequest {
  int64 tour_id = 1;
}

message PublishTourResponse {}

message ArchiveTourRequest {
  int64 tour_id = 1;
}

message ArchiveTourResponse {}